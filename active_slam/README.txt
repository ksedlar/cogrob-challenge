This Package contains the active_slam node.

This node takes as input a map (generated by SLAM) and returns a PointCloud of possible locations of interest the robot(s) may want to travel to next in order to get the most information about the map.

Inputs:
- OccupancyGrid /map: map with values -1 for unkown regions, 0 for known empty regions, and 100 for known walls
- Bool /semaphore: a signal from motion planning to find a new set of points to travel to

Outputs:
- PointCloud /possible_points: a set of possible points of interest, along with their value

There are several ROS Params that can be used to change the behavior of the node.

- float unknown_const: The coefficient on the explore term, weighing how likely the robot is to go toward unknown regions of the map
- float wall_const: The coefficient on the explot term, weighing how likely the robot is to go toward known regions that may need tuning on the map, particularly walls, especially those with fuzzy borders.
- int sigma: Measures how far away from an edge on a map a point of interest is likely to occur
- int num_points: How many points to publish in the PointCloud /possible_points
- int pixel_dist: How many pixels from a wall or unkown region the points in /possible_points need to be
- bool pick_randomly: A True/False value that dictates whether points are picked from a distrubution randomly with weight on their value or if False, just the top nump_points points are chosen.


Here is a quick outline of how the node works:
0. Save the map information whenever it arrives. When we get a True /semaphore value, continue to step 1.
1. Find points on the border of the known region of the map and the unknown and walled regions, and assign them values of unknown_const and wall_const respectively.
2. Convolve this matrix with a gaussian with standard deviation sigma.
3. Find and publish points in this new matrix that have a high value and that are in a known region and at least pixel_dist pixels from an unknown or wall pixel